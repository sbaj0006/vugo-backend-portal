service:
  name: ${file(../../../../package.json ):name}-public-api-series

plugins:
  - serverless-webpack
  - serverless-offline
  - serverless-aws-documentation
  - serverless-plugin-resource-tagging
  - serverless-dotenv-plugin
  - serverless-deployment-bucket
provider:
  name: aws
  stackTags:
    'Vugo Environment': 'Vugo'
  apiVersion: ${file(../../../../deploymentConfig/config.${self:provider.stage}.yml):apiVersion}
  runtime: nodejs12.x
  stage: ${opt:stage, 'dev'} # Stage env for backend development, dev env for app users testing, production for released version
  region: ${file(../../../../deploymentConfig/config.${self:provider.stage}.yml):region}
  role: ${self:custom.iamRole}
  deploymentBucket:
    name: ${file(../../../../deploymentConfig/config.${self:provider.stage}.yml):srcBucketName}
    serverSideEncryption: AES256
  environment:
    STAGE: ${self:provider.stage}
    S3_BUCKET_NAME:  ${file(../../../../deploymentConfig/config.${self:provider.stage}.yml):assetBucketName}
  apiGateway: ${file(../../../../deploymentConfig/config.${self:provider.stage}.yml):publicApiGateway}
  tags:
    apiVersion: ${self:provider.apiVersion}
  versionFunctions: false

functions:
  get-all-published-series:
    handler: series.getAllPublishedSeries
    events:
      - http:
          method: get
          path: ${self:custom.publicBaseUrl}/series/published
          cors: true
          documentation:
            summary: 'Get published series'
            description: 'Get published series'
            methodResponses:
              - statusCode: '200'
                responseBody:
                  description: 'Response contains Published series'
  get-series-by-uuid:
    handler: series.getSeriesByUuid
    events:
      - http:
          method: get
          path: ${self:custom.publicBaseUrl}/series/search/{seriesUuid}
          cors: true
          documentation:
            summary: 'Get series by uuid'
            description: 'Get series by uuid'
            methodResponses:
              - statusCode: '200'
                responseBody:
                  description: 'Response contains series data'
custom:
  iamRole: ${file(../../../../deploymentConfig/config.${self:provider.stage}.yml):publicIamRole}
  publicBaseUrl: ${file(../../../../deploymentConfig/config.${self:provider.stage}.yml):publicBaseUrl}
  serverless-offline:
    port: 4000
  dotenv:
    path: ../../../../.env 
    basePath: ./
    logging: false
