service:
  name: ${file(../../../../package.json ):name}-public-api-layouts

plugins:
  - serverless-webpack
  - serverless-offline
  - serverless-aws-documentation
  - serverless-plugin-resource-tagging
  - serverless-dotenv-plugin
  - serverless-deployment-bucket
provider:
  name: aws
  stackTags:
    'Vugo Environment': 'Vugo'
  apiVersion: ${file(../../../../deploymentConfig/config.${self:provider.stage}.yml):apiVersion}
  runtime: nodejs12.x
  stage: ${opt:stage, 'dev'} # Stage env for backend development, dev env for app users testing, production for released version
  region: ${file(../../../../deploymentConfig/config.${self:provider.stage}.yml):region}
  role: ${self:custom.iamRole}
  deploymentBucket:
    name: ${file(../../../../deploymentConfig/config.${self:provider.stage}.yml):srcBucketName}
    serverSideEncryption: AES256
  environment:
    STAGE: ${self:provider.stage}
    S3_BUCKET_NAME: aev-afp-prv115035-dev
  apiGateway: ${file(../../../../deploymentConfig/config.${self:provider.stage}.yml):publicApiGateway}
  tags:
    apiVersion: ${self:provider.apiVersion}
  versionFunctions: false

functions:
  layouts:
    handler: layout.getLayoutRails
    events:
      - http:
          method: get
          path: ${self:custom.publicBaseUrl}/layout/{page}
          cors: true
          documentation:
            summary: 'Get the page type and page rails'
            description: 'Get the page type and page rails'
            methodResponses:
              - statusCode: '200'
                responseBody:
                  description: 'Response contains Page type and Page rails'
  get-rails-details:
    handler: layout.getRailTitles
    events:
      - http:
          method: get
          path: ${self:custom.publicBaseUrl}/layout/rails/{railId}
          cors: true
          documentation:
            summary: 'Get Page Rail Details'
            description: 'Get page Rail Details'
            methodResponses:
              - statusCode: '200'
                responseBody:
                  description: 'Response contains Page Rail Details'
  get-rails-types:
    handler: layout.getAllRailTypes
    events:
      - http:
          method: get
          path: ${self:custom.publicBaseUrl}/layout/rail-types
          cors: true
          documentation:
            summary: 'Get Page Rail Types'
            description: 'Get page Rail Types'
            methodResponses:
              - statusCode: '200'
                responseBody:
                  description: 'Response contains Page Rail Types'
custom:
  iamRole: ${file(../../../../deploymentConfig/config.${self:provider.stage}.yml):publicIamRole}
  publicBaseUrl: ${file(../../../../deploymentConfig/config.${self:provider.stage}.yml):publicBaseUrl}
  serverless-offline:
    port: 4000
  dotenv:
    path: ../../../../.env 
    basePath: ./
    logging: false
